{"version":3,"sources":["../src/cli.ts"],"names":["argv","yargs","alias","describe","demandOption","help","epilog","sourcesPath","path","join","process","cwd","sources","outputPath","output","FS","pathExistsSync","console","error","exit","mkdirpSync","src","dist","fontName","css","outSVGReact","outSVGPath","svgicons2svgfont","fontHeight","normalize","then","log","err"],"mappings":"AAAA;;;;;AAEA;;AACA;;AACA;;AACA;;AAEA,IAAMA,IAAI,GAAGC,kBACVC,KADU,CACJ,GADI,EACC,SADD,EAEVC,QAFU,CAED,GAFC,EAEI,+CAFJ,EAGVD,KAHU,CAGJ,GAHI,EAGC,QAHD,EAIVC,QAJU,CAID,GAJC,EAII,mBAJJ,EAKVD,KALU,CAKJ,GALI,EAKC,UALD,EAMVC,QANU,CAMD,GANC,EAMI,YANJ,EAOVC,YAPU,CAOG,CAAC,QAAD,EAAW,SAAX,CAPH,EAQVC,IARU,CAQL,GARK,EASVH,KATU,CASJ,GATI,EASC,MATD,EAUVI,MAVU,CAUH,gBAVG,EAWVN,IAXH;;AAaA,IAAMO,WAAW,GAAGC,iBAAKC,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyBX,IAAI,CAACY,OAA9B,CAApB;;AACA,IAAMC,UAAU,GAAGL,iBAAKC,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyBX,IAAI,CAACc,MAA9B,CAAnB;;AAEA,IAAI,CAACC,oBAAGC,cAAH,CAAkBT,WAAlB,CAAL,EAAqC;AACnCU,EAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CX,WAA/C;AACAG,EAAAA,OAAO,CAACS,IAAR;AACD;;AAED,IAAI,CAACJ,oBAAGC,cAAH,CAAkBH,UAAlB,CAAL,EAAoC;AAClCE,sBAAGK,UAAH,CAAcP,UAAd;AACD;;AAED,kBAAU;AACRQ,EAAAA,GAAG,EAAEd,WADG;AACU;AAClBe,EAAAA,IAAI,EAAET,UAFE;AAEU;AAClB;AACAU,EAAAA,QAAQ,EAAGvB,IAAI,CAACuB,QAAN,IAA6B,SAJ/B;AAI0C;AAClDC,EAAAA,GAAG,EAAE,IALG;AAKG;AACXC,EAAAA,WAAW,EAAE,IANL;AAORC,EAAAA,UAAU,EAAE,IAPJ;AAQRC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,UAAU,EAAE,IADI;AAEhBC,IAAAA,SAAS,EAAE;AAFK;AARV,CAAV,EAaCC,IAbD,CAaM,YAAM;AACVb,EAAAA,OAAO,CAACc,GAAR,CAAY,OAAZ;AACD,CAfD,WAeS,UAACC,GAAD,EAAS;AAChBf,EAAAA,OAAO,CAACc,GAAR,CAAY,gBAAZ,EAA8BC,GAA9B;AACD,CAjBD","sourcesContent":["#!/usr/bin/env node\n\nimport FS from 'fs-extra';\nimport yargs from 'yargs';\nimport path from 'path';\nimport svgtofont from './';\n\nconst argv = yargs\n  .alias('s', 'sources')\n  .describe('s', 'The root from which all sources are relative.')\n  .alias('o', 'output')\n  .describe('o', 'Output directory.')\n  .alias('f', 'fontName')\n  .describe('f', 'Font Name.')\n  .demandOption(['output', 'sources'])\n  .help('h')\n  .alias('h', 'help')\n  .epilog('copyright 2019')\n  .argv;\n\nconst sourcesPath = path.join(process.cwd(), argv.sources as string);\nconst outputPath = path.join(process.cwd(), argv.output as string);\n\nif (!FS.pathExistsSync(sourcesPath)) {\n  console.error('The directory does not exist!', sourcesPath);\n  process.exit();\n}\n\nif (!FS.pathExistsSync(outputPath)) {\n  FS.mkdirpSync(outputPath);\n}\n\nsvgtofont({\n  src: sourcesPath, // svg path\n  dist: outputPath, // output path\n  // emptyDist: true, // Clear output directory contents\n  fontName: (argv.fontName as string) || \"svgfont\", // font name\n  css: true, // Create CSS files.\n  outSVGReact: true,\n  outSVGPath: true,\n  svgicons2svgfont: {\n    fontHeight: 1000,\n    normalize: true,\n  },\n})\n.then(() => {\n  console.log('done!');\n}).catch((err) => {\n  console.log('SvgToFont:ERR:', err);\n});\n"]}